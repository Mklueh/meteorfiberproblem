{
  "_args": [
    [
      {
        "raw": "nodegit",
        "scope": null,
        "escapedName": "nodegit",
        "name": "nodegit",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Marian\\Documents\\Workspaces\\node\\MeteorFiberProblem"
    ]
  ],
  "_from": "nodegit@latest",
  "_id": "nodegit@0.18.3",
  "_inCache": true,
  "_location": "/nodegit",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/nodegit-0.18.3.tgz_1493242304867_0.6098919939249754"
  },
  "_npmUser": {
    "name": "johnhaley81",
    "email": "johnhaley81@gmail.com"
  },
  "_npmVersion": "3.8.9",
  "_phantomChildren": {
    "graceful-fs": "4.1.11",
    "klaw": "1.3.1",
    "path-is-absolute": "1.0.1",
    "rimraf": "2.6.1"
  },
  "_requested": {
    "raw": "nodegit",
    "scope": null,
    "escapedName": "nodegit",
    "name": "nodegit",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/nodegit/-/nodegit-0.18.3.tgz",
  "_shasum": "305b6a305ea485fe5f1679fe37e6224a669ae9fc",
  "_shrinkwrap": null,
  "_spec": "nodegit",
  "_where": "C:\\Users\\Marian\\Documents\\Workspaces\\node\\MeteorFiberProblem",
  "author": {
    "name": "Tim Branyen",
    "url": "@tbranyen"
  },
  "binary": {
    "module_name": "nodegit",
    "module_path": "./build/Release/",
    "host": "https://nodegit.s3.amazonaws.com/nodegit/nodegit/"
  },
  "bugs": {
    "url": "https://github.com/nodegit/nodegit/issues"
  },
  "contributors": [
    {
      "name": "John Haley",
      "email": "john@haley.io"
    },
    {
      "name": "Max Korp",
      "email": "maxkorp@8bytealchemy.com"
    }
  ],
  "dependencies": {
    "fs-extra": "~0.26.2",
    "lodash": "^4.13.1",
    "nan": "^2.2.0",
    "node-gyp": "^3.5.0",
    "node-pre-gyp": "~0.6.32",
    "promisify-node": "~0.3.0"
  },
  "description": "Node.js libgit2 asynchronous native bindings",
  "devDependencies": {
    "aws-sdk": "^2.3.19",
    "babel-cli": "^6.7.7",
    "babel-preset-es2015": "^6.6.0",
    "clean-for-publish": "~1.0.2",
    "combyne": "~0.8.1",
    "coveralls": "~2.11.4",
    "istanbul": "~0.3.20",
    "js-beautify": "~1.5.10",
    "jshint": "~2.8.0",
    "lcov-result-merger": "~1.0.2",
    "mocha": "~2.3.4",
    "walk": "^2.3.9"
  },
  "directories": {
    "build": "./build",
    "lib": "./lib"
  },
  "dist": {
    "shasum": "305b6a305ea485fe5f1679fe37e6224a669ae9fc",
    "tarball": "https://registry.npmjs.org/nodegit/-/nodegit-0.18.3.tgz"
  },
  "engines": {
    "node": ">= 4"
  },
  "gitHead": "1cac5b20447d10d0310787568b4bf4a66a5733ee",
  "homepage": "http://nodegit.org",
  "keywords": [
    "libgit2",
    "git2",
    "git",
    "native"
  ],
  "license": "MIT",
  "main": "dist/nodegit.js",
  "maintainers": [
    {
      "name": "tbranyen",
      "email": "tim@tabdeveloper.com"
    },
    {
      "name": "faceleg",
      "email": "mike@pagesofinterest.net"
    },
    {
      "name": "johnhaley81",
      "email": "johnhaley81@gmail.com"
    },
    {
      "name": "maxkorp",
      "email": "maxkorp@8bytealchemy.com"
    }
  ],
  "name": "nodegit",
  "optionalDependencies": {},
  "readme": "NodeGit\n-------\n\n> Node bindings to the [libgit2](http://libgit2.github.com/) project.\n\n<table>\n  <thead>\n    <tr>\n      <th>Linux</th>\n      <th>OS X</th>\n      <th>Windows</th>\n      <th>Coverage</th>\n      <th>Dependencies</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td colspan=\"2\" align=\"center\">\n        <a href=\"https://travis-ci.org/nodegit/nodegit\"><img src=\"https://api.travis-ci.org/nodegit/nodegit.svg?branch=master\"></a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://ci.appveyor.com/project/timbranyen/nodegit\"><img src=\"https://ci.appveyor.com/api/projects/status/e5a5q75l9yfhnfv2?svg=true\"></a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://coveralls.io/r/nodegit/nodegit\"><img src=\"https://coveralls.io/repos/nodegit/nodegit/badge.svg\" alt=\"Coverage Status\"></a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://david-dm.org/nodegit/nodegit\"><img src=\"https://david-dm.org/nodegit/nodegit.svg\"></a>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n**Stable (libgit2#master): 0.18.0**\n**Stable (libgit2@0.24): 0.14.1**\n\n## Have a problem? Come chat with us! ##\n\nVisit [slack.libgit2.org](http://slack.libgit2.org/) to sign up, then join us in #nodegit.\n\n## Maintained by ##\nTim Branyen [@tbranyen](http://twitter.com/tbranyen),\nJohn Haley [@johnhaley81](http://twitter.com/johnhaley81), and\nMax Korp [@maxkorp](http://twitter.com/MaximilianoKorp) with help from tons of\n[awesome contributors](https://github.com/nodegit/nodegit/contributors)!\n\n### Alumni Maintainers ###\nSteve Smith [@orderedlist](https://twitter.com/orderedlist),\nMichael Robinson [@codeofinterest](http://twitter.com/codeofinterest), and\nNick Kallen [@nk](http://twitter.com/nk)\n\n## API Documentation. ##\n\n[http://www.nodegit.org/](http://www.nodegit.org/)\n\n## Getting started. ##\n\nNodeGit will work on most systems out-of-the-box without any native\ndependencies.\n\n``` bash\nnpm install nodegit\n```\n\nIf you receive errors about libstdc++, which are commonly experienced when\nbuilding on Travis-CI, you can fix this by upgrading to the latest\nlibstdc++-4.9.\n\nIn Ubuntu:\n\n``` sh\nsudo add-apt-repository ppa:ubuntu-toolchain-r/test\nsudo apt-get update\nsudo apt-get install libstdc++-4.9-dev\n```\n\nIn Travis:\n\n``` yaml\naddons:\n  apt:\n    sources:\n      - ubuntu-toolchain-r-test\n    packages:\n      - libstdc++-4.9-dev\n```\n\nIn CircleCI:\n\n``` yaml\n  dependencies:\n    pre:\n      - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test\n      - sudo apt-get update\n      - sudo apt-get install -y libstdc++-4.9-dev\n```\n\nIf you are still encountering problems while installing, you should try the\n[Building from source](http://www.nodegit.org/guides/install/from-source/)\ninstructions.\n\n## API examples. ##\n\n### Cloning a repository and reading a file: ###\n\n``` javascript\nvar Git = require(\"nodegit\");\n\n// Clone a given repository into the `./tmp` folder.\nGit.Clone(\"https://github.com/nodegit/nodegit\", \"./tmp\")\n  // Look up this known commit.\n  .then(function(repo) {\n    // Use a known commit sha from this repository.\n    return repo.getCommit(\"59b20b8d5c6ff8d09518454d4dd8b7b30f095ab5\");\n  })\n  // Look up a specific file within that commit.\n  .then(function(commit) {\n    return commit.getEntry(\"README.md\");\n  })\n  // Get the blob contents from the file.\n  .then(function(entry) {\n    // Patch the blob to contain a reference to the entry.\n    return entry.getBlob().then(function(blob) {\n      blob.entry = entry;\n      return blob;\n    });\n  })\n  // Display information about the blob.\n  .then(function(blob) {\n    // Show the path, sha, and filesize in bytes.\n    console.log(blob.entry.path() + blob.entry.sha() + blob.rawsize() + \"b\");\n\n    // Show a spacer.\n    console.log(Array(72).join(\"=\") + \"\\n\\n\");\n\n    // Show the entire file.\n    console.log(String(blob));\n  })\n  .catch(function(err) { console.log(err); });\n\n```\n\n### Emulating git log: ###\n\n``` javascript\nvar Git = require(\"nodegit\");\n\n// Open the repository directory.\nGit.Repository.open(\"tmp\")\n  // Open the master branch.\n  .then(function(repo) {\n    return repo.getMasterCommit();\n  })\n  // Display information about commits on master.\n  .then(function(firstCommitOnMaster) {\n    // Create a new history event emitter.\n    var history = firstCommitOnMaster.history();\n\n    // Create a counter to only show up to 9 entries.\n    var count = 0;\n\n    // Listen for commit events from the history.\n    history.on(\"commit\", function(commit) {\n      // Disregard commits past 9.\n      if (++count >= 9) {\n        return;\n      }\n\n      // Show the commit sha.\n      console.log(\"commit \" + commit.sha());\n\n      // Store the author object.\n      var author = commit.author();\n\n      // Display author information.\n      console.log(\"Author:\\t\" + author.name() + \" <\" + author.email() + \">\");\n\n      // Show the commit date.\n      console.log(\"Date:\\t\" + commit.date());\n\n      // Give some space and show the message.\n      console.log(\"\\n    \" + commit.message());\n    });\n\n    // Start emitting events.\n    history.start();\n  });\n```\n\nFor more examples, check the `examples/` folder.\n\n## Unit tests. ##\n\nYou will need to build locally before running the tests.  See above.\n\n``` bash\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/nodegit/nodegit.git"
  },
  "scripts": {
    "babel": "babel --presets es2015 -d ./dist ./lib",
    "cov": "npm run cppcov && npm run filtercov && npm run mergecov",
    "coveralls": "cat ./test/coverage/merged.lcov | coveralls",
    "cppcov": "mkdir -p test/coverage/cpp && ./lcov-1.10/bin/lcov --gcov-tool /usr/bin/gcov-4.9 --capture --directory build/Release/obj.target/nodegit/src --output-file test/coverage/cpp/lcov_full.info",
    "filtercov": "./lcov-1.10/bin/lcov --extract test/coverage/cpp/lcov_full.info $(pwd)/src/* $(pwd)/src/**/* $(pwd)/include/* $(pwd)/include/**/* --output-file test/coverage/cpp/lcov.info && rm test/coverage/cpp/lcov_full.info",
    "generateJson": "node generate/scripts/generateJson",
    "generateMissingTests": "node generate/scripts/generateMissingTests",
    "generateNativeCode": "node generate/scripts/generateNativeCode",
    "install": "node lifecycleScripts/preinstall && node lifecycleScripts/install",
    "installDebug": "BUILD_DEBUG=true npm install",
    "lint": "jshint lib test/tests test/utils examples lifecycleScripts",
    "mergecov": "lcov-result-merger 'test/**/*.info' 'test/coverage/merged.lcov' && ./lcov-1.10/bin/genhtml test/coverage/merged.lcov --output-directory test/coverage/report",
    "mocha": "mocha test/runner test/tests --timeout 15000",
    "mochaDebug": "mocha --debug-brk test/runner test/tests --timeout 15000",
    "postinstall": "node lifecycleScripts/postinstall",
    "prepublish": "npm run babel",
    "rebuild": "node generate && npm run babel && node-gyp configure build",
    "rebuildDebug": "node generate && npm run babel && node-gyp configure --debug build",
    "recompile": "node-gyp configure build",
    "recompileDebug": "node-gyp configure --debug build",
    "test": "npm run lint && node --expose-gc test",
    "xcodeDebug": "node-gyp configure -- -f xcode"
  },
  "vendorDependencies": {
    "libssh2": "1.7.0",
    "http_parser": "2.5.0"
  },
  "version": "0.18.3"
}
